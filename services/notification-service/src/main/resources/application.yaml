spring:
  application:
    name: notification-service
  data:
    mongodb:
      uri: mongodb://${DB_URL:localhost:27026}
      username: ${DB_USERNAME:mongo}
      password: ${DB_PASSWORD:root}
      replica-set-name: ${DB_REPLICA_SET_NAME:rs0}
      database: ${DB_NAME:notification_database}
  mail:
    host: ${MAIL_SERVICE_HOST:smtp.mailersend.net}
    port: ${MAIL_SERVICE_PORT:587}
    username: ${MAIL_SERVICE_CLIENT_USERNAME:MS_7Truiz@trial-xkjn41m21p04z781.mlsender.net}
    password: ${MAIL_SERVICE_CLIENT_PASSWORD:mssp.xaYg5O5.0r83ql3j78pgzw1j.XPFbmTP}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    default-encoding: UTF-8
  kafka:
    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      properties:
        spring.json:
          value.default.type: java.util.Map
          trusted.packages: '*'
          use.type.headers: false
        spring.deserializer:
          key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
          value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
mongock:
  migration-scan-package: com.mealmap.notificationservice.migration
  transactional: true
  enabled: true
business:
  kafka:
    topics:
      user-contacts-update-tg-chat:
        name: user-contacts.update-tg-chat.v1
        consumer:
          group-id: user-contacts.update-tg-chat.consumer.group
  notifications:
    email:
      enabled: ${NOTIFICATIONS_EMAIL_ENABLED:true}
      sender:
        email: ${NOTIFICATIONS_EMAIL_SENDER_EMAIL:mealmap@trial-xkjn41m21p04z781.mlsender.net}
        name: ${NOTIFICATIONS_EMAIL_SENDER_NAME:MealMap - сервис организации корпоративного питания}
    telegram:
      enabled: ${NOTIFICATIONS_TELEGRAM_ENABLED:true}
    sms:
      enabled: ${NOTIFICATIONS_SMS_ENABLED:false}
  services:
    telegram-bot:
      url: ${TELEGRAM_BOT_API_URL:http://localhost:8092/api/v1/telegram-bot/}
server:
  port: ${SERVER_PORT:8091}
