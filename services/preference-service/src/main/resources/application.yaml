spring:
  application:
    name: preference-service
  datasource:
    url: jdbc:postgresql://${DB_URL:localhost:5438/preference_database}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:root}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6383}
      password: ${REDIS_PASSWORD:password}
      database: ${REDIS_DATABASE:0}
  jpa:
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  kafka:
    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      properties:
        spring.json:
          value.default.type: java.util.Map
          trusted.packages: '*'
          use.type.headers: false
        spring.deserializer:
          key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
          value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    template:
      observation-enabled: true
    listener:
      observation-enabled: true
cache:
  user-preferences:
    name: ${CACHE_USER_PREFERENCES_NAME:userPreferencesCache}
    ttl: ${CACHE_USER_PREFERENCES_TTL:3600}
security:
  oauth2:
    client:
      client-id: ${OAUTH2_CLIENT_CLIENT_ID:preference-service}
      client-secret: ${OAUTH2_CLIENT_CLIENT_SECRET:ZZg5TJNas4AqXWeKzxGQaoI7w79TMuOL}
  web:
    cors:
      allowed-origins:
        - ${ALLOWED_ORIGINS_LOCALHOST:http://localhost:3000}
        - ${ALLOWED_ORIGINS_PRODUCTION:http://172.20.10.4:3000}
    open-endpoints:
      actuator:
        - /actuator/**
      open-api:
        - /swagger-ui/**
        - /swagger-resources/**
        - /v3/api-docs/**
        - /v3/api-docs.yaml
business:
  kafka:
    topics:
      user-preferences-creation:
        name: user.preferences-creation.v1
        consumer:
          group-id: user.preferences-creation.consumer.group
eureka:
  client:
    service-url:
      default-zone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,info,metrics
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}
logging:
  logstash:
    server: ${LOGSTASH_HOSTPORT:localhost:5000}
server:
  port: ${SERVER_PORT:8088}
